/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://jitpack.io' }
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.0.1-jre'
    implementation 'com.github.teamnewpipe:NewPipeExtractor:v0.24.4'
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    // https://mvnrepository.com/artifact/commons-validator/commons-validator
    implementation 'commons-validator:commons-validator:1.9.0'
    // from NewPipeExtractor, so we'll just use the same one
    ext{
        nanojsonVersion = "1d9e1aea9049fc9f85e68b43ba39fe7be1c1f751"
    }
    implementation "com.github.TeamNewPipe:nanojson:$nanojsonVersion"
}

application {
    // Define the main class for the application.
    mainClass = 'ytclient.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named("installDist") {
    duplicatesStrategy = 'exclude'
}
